function tableout = importfile(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE Import data from a spreadsheet
%   DATA = IMPORTFILE(FILE) reads data from the first worksheet in the
%   Microsoft Excel spreadsheet file named FILE and returns the data as a
%   table.
%
%   DATA = IMPORTFILE(FILE,SHEET) reads from the specified worksheet.
%
%   DATA = IMPORTFILE(FILE,SHEET,STARTROW,ENDROW) reads from the specified
%   worksheet for the specified row interval(s). Specify STARTROW and
%   ENDROW as a pair of scalars or vectors of matching size for
%   dis-contiguous row intervals. To read to the end of the file specify an
%   ENDROW of inf.%
% Example:
%   Data = importfile('Mortgage Loan CF v1.0.xlsm','Mortgage Input',5,13);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2017/03/15 16:23:10

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 5;
    endRow = 13;
end

%% Import the data, extracting spreadsheet dates in Excel serial date format
[~, ~, raw, dates] = xlsread(workbookFile, sheetName, sprintf('B%d:N%d',startRow(1),endRow(1)),'' , @convertSpreadsheetExcelDates);
for block=2:length(startRow)
    [~, ~, tmpRawBlock,tmpDateNumBlock] = xlsread(workbookFile, sheetName, sprintf('B%d:N%d',startRow(block),endRow(block)),'' , @convertSpreadsheetExcelDates);
    raw = [raw;tmpRawBlock]; %#ok<AGROW>
    dates = [dates;tmpDateNumBlock]; %#ok<AGROW>
end
stringVectors = string(raw(:,7));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[1,2,3,4,5,6,8,11,12,13]);
dates = dates(:,[9,10]);

%% Create output variable
I = cellfun(@(x) ischar(x), raw);
raw(I) = {NaN};
data = reshape([raw{:}],size(raw));

%% Create table
tableout = table;

%% Allocate imported array to column variable names
tableout.Case = data(:,1);
tableout.Balance = data(:,2);
tableout.Rate = data(:,3);
tableout.Termmos = data(:,4);
tableout.Amortizationmos = data(:,5);
tableout.MonthlyPayment = data(:,6);
tableout.PPRLQR = categorical(stringVectors(:,1));
tableout.PERIODICRATE = data(:,7);
dates(~cellfun(@(x) isnumeric(x) || islogical(x), dates)) = {NaN};
tableout.IAD = datetime([dates{:,1}].', 'ConvertFrom', 'Excel');
tableout.Maturity = datetime([dates{:,2}].', 'ConvertFrom', 'Excel');
tableout.PPR = data(:,8);
tableout.LQR = data(:,9);
tableout.DollarDuration = data(:,10);

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% tableout.IAD=datenum(tableout.IAD);
% tableout.Maturity=datenum(tableout.Maturity);

